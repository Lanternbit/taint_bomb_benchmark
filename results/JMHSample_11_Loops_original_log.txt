STDOUT:
# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureRight

# Run progress: 0.00% complete, ETA 00:11:40
# Fork: 1 of 5
# Warmup Iteration   1: 0.598 ns/op
Iteration   1: 0.543 ns/op

# Run progress: 2.86% complete, ETA 00:11:33
# Fork: 2 of 5
# Warmup Iteration   1: 0.560 ns/op
Iteration   1: 0.557 ns/op

# Run progress: 5.71% complete, ETA 00:11:11
# Fork: 3 of 5
# Warmup Iteration   1: 0.564 ns/op
Iteration   1: 0.551 ns/op

# Run progress: 8.57% complete, ETA 00:10:50
# Fork: 4 of 5
# Warmup Iteration   1: 0.563 ns/op
Iteration   1: 0.535 ns/op

# Run progress: 11.43% complete, ETA 00:10:30
# Fork: 5 of 5
# Warmup Iteration   1: 0.577 ns/op
Iteration   1: 0.570 ns/op


Result "org.sample.JMHSample_11_Loops.measureRight":
  0.551 ��(99.9%) 0.052 ns/op [Average]
  (min, avg, max) = (0.535, 0.551, 0.570), stdev = 0.013
  CI (99.9%): [0.500, 0.603] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_1

# Run progress: 14.29% complete, ETA 00:10:09
# Fork: 1 of 5
# Warmup Iteration   1: 0.543 ns/op
Iteration   1: 0.548 ns/op

# Run progress: 17.14% complete, ETA 00:09:49
# Fork: 2 of 5
# Warmup Iteration   1: 0.549 ns/op
Iteration   1: 0.532 ns/op

# Run progress: 20.00% complete, ETA 00:09:28
# Fork: 3 of 5
# Warmup Iteration   1: 0.554 ns/op
Iteration   1: 0.553 ns/op

# Run progress: 22.86% complete, ETA 00:09:08
# Fork: 4 of 5
# Warmup Iteration   1: 0.579 ns/op
Iteration   1: 0.573 ns/op

# Run progress: 25.71% complete, ETA 00:08:48
# Fork: 5 of 5
# Warmup Iteration   1: 0.563 ns/op
Iteration   1: 0.544 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_1":
  0.550 ��(99.9%) 0.058 ns/op [Average]
  (min, avg, max) = (0.532, 0.550, 0.573), stdev = 0.015
  CI (99.9%): [0.492, 0.608] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_10

# Run progress: 28.57% complete, ETA 00:08:27
# Fork: 1 of 5
# Warmup Iteration   1: 0.067 ns/op
Iteration   1: 0.067 ns/op

# Run progress: 31.43% complete, ETA 00:08:07
# Fork: 2 of 5
# Warmup Iteration   1: 0.066 ns/op
Iteration   1: 0.064 ns/op

# Run progress: 34.29% complete, ETA 00:07:47
# Fork: 3 of 5
# Warmup Iteration   1: 0.063 ns/op
Iteration   1: 0.061 ns/op

# Run progress: 37.14% complete, ETA 00:07:26
# Fork: 4 of 5
# Warmup Iteration   1: 0.061 ns/op
Iteration   1: 0.064 ns/op

# Run progress: 40.00% complete, ETA 00:07:06
# Fork: 5 of 5
# Warmup Iteration   1: 0.062 ns/op
Iteration   1: 0.062 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_10":
  0.064 ��(99.9%) 0.009 ns/op [Average]
  (min, avg, max) = (0.061, 0.064, 0.067), stdev = 0.002
  CI (99.9%): [0.054, 0.073] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_100

# Run progress: 42.86% complete, ETA 00:06:46
# Fork: 1 of 5
# Warmup Iteration   1: 0.019 ns/op
Iteration   1: 0.020 ns/op

# Run progress: 45.71% complete, ETA 00:06:25
# Fork: 2 of 5
# Warmup Iteration   1: 0.020 ns/op
Iteration   1: 0.020 ns/op

# Run progress: 48.57% complete, ETA 00:06:05
# Fork: 3 of 5
# Warmup Iteration   1: 0.020 ns/op
Iteration   1: 0.020 ns/op

# Run progress: 51.43% complete, ETA 00:05:45
# Fork: 4 of 5
# Warmup Iteration   1: 0.019 ns/op
Iteration   1: 0.019 ns/op

# Run progress: 54.29% complete, ETA 00:05:24
# Fork: 5 of 5
# Warmup Iteration   1: 0.019 ns/op
Iteration   1: 0.019 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_100":
  0.020 ��(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (0.019, 0.020, 0.020), stdev = 0.001
  CI (99.9%): [0.018, 0.022] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_1000

# Run progress: 57.14% complete, ETA 00:05:04
# Fork: 1 of 5
# Warmup Iteration   1: 0.013 ns/op
Iteration   1: 0.013 ns/op

# Run progress: 60.00% complete, ETA 00:04:44
# Fork: 2 of 5
# Warmup Iteration   1: 0.013 ns/op
Iteration   1: 0.013 ns/op

# Run progress: 62.86% complete, ETA 00:04:23
# Fork: 3 of 5
# Warmup Iteration   1: 0.014 ns/op
Iteration   1: 0.015 ns/op

# Run progress: 65.71% complete, ETA 00:04:03
# Fork: 4 of 5
# Warmup Iteration   1: 0.015 ns/op
Iteration   1: 0.016 ns/op

# Run progress: 68.57% complete, ETA 00:03:43
# Fork: 5 of 5
# Warmup Iteration   1: 0.015 ns/op
Iteration   1: 0.014 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_1000":
  0.014 ��(99.9%) 0.005 ns/op [Average]
  (min, avg, max) = (0.013, 0.014, 0.016), stdev = 0.001
  CI (99.9%): [0.010, 0.019] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_10000

# Run progress: 71.43% complete, ETA 00:03:23
# Fork: 1 of 5
# Warmup Iteration   1: 0.014 ns/op
Iteration   1: 0.014 ns/op

# Run progress: 74.29% complete, ETA 00:03:02
# Fork: 2 of 5
# Warmup Iteration   1: 0.014 ns/op
Iteration   1: 0.013 ns/op

# Run progress: 77.14% complete, ETA 00:02:42
# Fork: 3 of 5
# Warmup Iteration   1: 0.014 ns/op
Iteration   1: 0.013 ns/op

# Run progress: 80.00% complete, ETA 00:02:22
# Fork: 4 of 5
# Warmup Iteration   1: 0.014 ns/op
Iteration   1: 0.014 ns/op

# Run progress: 82.86% complete, ETA 00:02:01
# Fork: 5 of 5
# Warmup Iteration   1: 0.014 ns/op
Iteration   1: 0.014 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_10000":
  0.014 ��(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.013, 0.014, 0.014), stdev = 0.001
  CI (99.9%): [0.012, 0.015] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_100000

# Run progress: 85.71% complete, ETA 00:01:41
# Fork: 1 of 5
# Warmup Iteration   1: 0.013 ns/op
Iteration   1: 0.013 ns/op

# Run progress: 88.57% complete, ETA 00:01:21
# Fork: 2 of 5
# Warmup Iteration   1: 0.013 ns/op
Iteration   1: 0.013 ns/op

# Run progress: 91.43% complete, ETA 00:01:00
# Fork: 3 of 5
# Warmup Iteration   1: 0.013 ns/op
Iteration   1: 0.013 ns/op

# Run progress: 94.29% complete, ETA 00:00:40
# Fork: 4 of 5
# Warmup Iteration   1: 0.013 ns/op
Iteration   1: 0.013 ns/op

# Run progress: 97.14% complete, ETA 00:00:20
# Fork: 5 of 5
# Warmup Iteration   1: 0.013 ns/op
Iteration   1: 0.013 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_100000":
  0.013 ��(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.013, 0.013, 0.013), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)


# Run complete. Total time: 00:11:50

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                               Mode  Cnt  Score   Error  Units
JMHSample_11_Loops.measureRight         avgt    5  0.551 �� 0.052  ns/op
JMHSample_11_Loops.measureWrong_1       avgt    5  0.550 �� 0.058  ns/op
JMHSample_11_Loops.measureWrong_10      avgt    5  0.064 �� 0.009  ns/op
JMHSample_11_Loops.measureWrong_100     avgt    5  0.020 �� 0.002  ns/op
JMHSample_11_Loops.measureWrong_1000    avgt    5  0.014 �� 0.005  ns/op
JMHSample_11_Loops.measureWrong_10000   avgt    5  0.014 �� 0.001  ns/op
JMHSample_11_Loops.measureWrong_100000  avgt    5  0.013 �� 0.001  ns/op

Benchmark result is saved to results\JMHSample_11_Loops_original.csv


STDERR:
