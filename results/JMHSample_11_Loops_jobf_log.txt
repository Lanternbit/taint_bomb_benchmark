STDOUT:
# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureRight

# Run progress: 0.00% complete, ETA 00:11:40
# Fork: 1 of 5
# Warmup Iteration   1: 0.470 ns/op
Iteration   1: 0.426 ns/op

# Run progress: 2.86% complete, ETA 00:11:31
# Fork: 2 of 5
# Warmup Iteration   1: 0.420 ns/op
Iteration   1: 0.411 ns/op

# Run progress: 5.71% complete, ETA 00:11:09
# Fork: 3 of 5
# Warmup Iteration   1: 0.573 ns/op
Iteration   1: 0.818 ns/op

# Run progress: 8.57% complete, ETA 00:10:50
# Fork: 4 of 5
# Warmup Iteration   1: 0.495 ns/op
Iteration   1: 0.786 ns/op

# Run progress: 11.43% complete, ETA 00:10:29
# Fork: 5 of 5
# Warmup Iteration   1: 0.463 ns/op
Iteration   1: 0.780 ns/op


Result "org.sample.JMHSample_11_Loops.measureRight":
  0.644 ��(99.9%) 0.795 ns/op [Average]
  (min, avg, max) = (0.411, 0.644, 0.818), stdev = 0.207
  CI (99.9%): [? 0, 1.439] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_1

# Run progress: 14.29% complete, ETA 00:10:08
# Fork: 1 of 5
# Warmup Iteration   1: 0.447 ns/op
Iteration   1: 0.823 ns/op

# Run progress: 17.14% complete, ETA 00:09:49
# Fork: 2 of 5
# Warmup Iteration   1: 0.488 ns/op
Iteration   1: 0.820 ns/op

# Run progress: 20.00% complete, ETA 00:09:28
# Fork: 3 of 5
# Warmup Iteration   1: 0.453 ns/op
Iteration   1: 0.460 ns/op

# Run progress: 22.86% complete, ETA 00:09:08
# Fork: 4 of 5
# Warmup Iteration   1: 0.451 ns/op
Iteration   1: 0.441 ns/op

# Run progress: 25.71% complete, ETA 00:08:47
# Fork: 5 of 5
# Warmup Iteration   1: 0.441 ns/op
Iteration   1: 0.441 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_1":
  0.597 ��(99.9%) 0.791 ns/op [Average]
  (min, avg, max) = (0.441, 0.597, 0.823), stdev = 0.205
  CI (99.9%): [? 0, 1.388] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_10

# Run progress: 28.57% complete, ETA 00:08:27
# Fork: 1 of 5
# Warmup Iteration   1: 0.054 ns/op
Iteration   1: 0.053 ns/op

# Run progress: 31.43% complete, ETA 00:08:07
# Fork: 2 of 5
# Warmup Iteration   1: 0.053 ns/op
Iteration   1: 0.054 ns/op

# Run progress: 34.29% complete, ETA 00:07:46
# Fork: 3 of 5
# Warmup Iteration   1: 0.055 ns/op
Iteration   1: 0.055 ns/op

# Run progress: 37.14% complete, ETA 00:07:26
# Fork: 4 of 5
# Warmup Iteration   1: 0.052 ns/op
Iteration   1: 0.055 ns/op

# Run progress: 40.00% complete, ETA 00:07:05
# Fork: 5 of 5
# Warmup Iteration   1: 0.053 ns/op
Iteration   1: 0.053 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_10":
  0.054 ��(99.9%) 0.003 ns/op [Average]
  (min, avg, max) = (0.053, 0.054, 0.055), stdev = 0.001
  CI (99.9%): [0.051, 0.058] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_100

# Run progress: 42.86% complete, ETA 00:06:45
# Fork: 1 of 5
# Warmup Iteration   1: 0.022 ns/op
Iteration   1: 0.021 ns/op

# Run progress: 45.71% complete, ETA 00:06:25
# Fork: 2 of 5
# Warmup Iteration   1: 0.022 ns/op
Iteration   1: 0.022 ns/op

# Run progress: 48.57% complete, ETA 00:06:05
# Fork: 3 of 5
# Warmup Iteration   1: 0.022 ns/op
Iteration   1: 0.022 ns/op

# Run progress: 51.43% complete, ETA 00:05:44
# Fork: 4 of 5
# Warmup Iteration   1: 0.021 ns/op
Iteration   1: 0.021 ns/op

# Run progress: 54.29% complete, ETA 00:05:24
# Fork: 5 of 5
# Warmup Iteration   1: 0.022 ns/op
Iteration   1: 0.021 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_100":
  0.021 ��(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.021, 0.021, 0.022), stdev = 0.001
  CI (99.9%): [0.020, 0.023] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_1000

# Run progress: 57.14% complete, ETA 00:05:04
# Fork: 1 of 5
# Warmup Iteration   1: 0.026 ns/op
Iteration   1: 0.027 ns/op

# Run progress: 60.00% complete, ETA 00:04:43
# Fork: 2 of 5
# Warmup Iteration   1: 0.028 ns/op
Iteration   1: 0.026 ns/op

# Run progress: 62.86% complete, ETA 00:04:23
# Fork: 3 of 5
# Warmup Iteration   1: 0.026 ns/op
Iteration   1: 0.026 ns/op

# Run progress: 65.71% complete, ETA 00:04:03
# Fork: 4 of 5
# Warmup Iteration   1: 0.026 ns/op
Iteration   1: 0.026 ns/op

# Run progress: 68.57% complete, ETA 00:03:43
# Fork: 5 of 5
# Warmup Iteration   1: 0.026 ns/op
Iteration   1: 0.026 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_1000":
  0.026 ��(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.026, 0.026, 0.027), stdev = 0.001
  CI (99.9%): [0.025, 0.028] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_10000

# Run progress: 71.43% complete, ETA 00:03:22
# Fork: 1 of 5
# Warmup Iteration   1: 0.019 ns/op
Iteration   1: 0.019 ns/op

# Run progress: 74.29% complete, ETA 00:03:02
# Fork: 2 of 5
# Warmup Iteration   1: 0.019 ns/op
Iteration   1: 0.018 ns/op

# Run progress: 77.14% complete, ETA 00:02:42
# Fork: 3 of 5
# Warmup Iteration   1: 0.019 ns/op
Iteration   1: 0.019 ns/op

# Run progress: 80.00% complete, ETA 00:02:21
# Fork: 4 of 5
# Warmup Iteration   1: 0.019 ns/op
Iteration   1: 0.019 ns/op

# Run progress: 82.86% complete, ETA 00:02:01
# Fork: 5 of 5
# Warmup Iteration   1: 0.019 ns/op
Iteration   1: 0.019 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_10000":
  0.019 ��(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.018, 0.019, 0.019), stdev = 0.001
  CI (99.9%): [0.018, 0.019] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_11_Loops.measureWrong_100000

# Run progress: 85.71% complete, ETA 00:01:41
# Fork: 1 of 5
# Warmup Iteration   1: 0.018 ns/op
Iteration   1: 0.018 ns/op

# Run progress: 88.57% complete, ETA 00:01:21
# Fork: 2 of 5
# Warmup Iteration   1: 0.018 ns/op
Iteration   1: 0.018 ns/op

# Run progress: 91.43% complete, ETA 00:01:00
# Fork: 3 of 5
# Warmup Iteration   1: 0.018 ns/op
Iteration   1: 0.018 ns/op

# Run progress: 94.29% complete, ETA 00:00:40
# Fork: 4 of 5
# Warmup Iteration   1: 0.018 ns/op
Iteration   1: 0.018 ns/op

# Run progress: 97.14% complete, ETA 00:00:20
# Fork: 5 of 5
# Warmup Iteration   1: 0.018 ns/op
Iteration   1: 0.018 ns/op


Result "org.sample.JMHSample_11_Loops.measureWrong_100000":
  0.018 ��(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.018, 0.018, 0.018), stdev = 0.001
  CI (99.9%): [0.018, 0.018] (assumes normal distribution)


# Run complete. Total time: 00:11:49

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                               Mode  Cnt  Score    Error  Units
JMHSample_11_Loops.measureRight         avgt    5  0.644 ��  0.795  ns/op
JMHSample_11_Loops.measureWrong_1       avgt    5  0.597 ��  0.791  ns/op
JMHSample_11_Loops.measureWrong_10      avgt    5  0.054 ��  0.003  ns/op
JMHSample_11_Loops.measureWrong_100     avgt    5  0.021 ��  0.001  ns/op
JMHSample_11_Loops.measureWrong_1000    avgt    5  0.026 ��  0.001  ns/op
JMHSample_11_Loops.measureWrong_10000   avgt    5  0.019 ��  0.001  ns/op
JMHSample_11_Loops.measureWrong_100000  avgt    5  0.018 ��  0.001  ns/op

Benchmark result is saved to results\JMHSample_11_Loops_jobf.csv


STDERR:
