STDOUT:
# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_39_MemoryAccess.sumArray

# Run progress: 0.00% complete, ETA 00:00:30
# Fork: 1 of 5
# Warmup Iteration   1: 4.644 ms/op
Iteration   1: 4.725 ms/op

# Run progress: 6.67% complete, ETA 00:01:16
# Fork: 2 of 5
# Warmup Iteration   1: 4.638 ms/op
Iteration   1: 4.718 ms/op

# Run progress: 13.33% complete, ETA 00:01:09
# Fork: 3 of 5
# Warmup Iteration   1: 4.894 ms/op
Iteration   1: 4.723 ms/op

# Run progress: 20.00% complete, ETA 00:01:03
# Fork: 4 of 5
# Warmup Iteration   1: 4.657 ms/op
Iteration   1: 4.679 ms/op

# Run progress: 26.67% complete, ETA 00:00:57
# Fork: 5 of 5
# Warmup Iteration   1: 4.659 ms/op
Iteration   1: 4.689 ms/op


Result "org.sample.JMHSample_39_MemoryAccess.sumArray":
  4.707 ��(99.9%) 0.082 ms/op [Average]
  (min, avg, max) = (4.679, 4.707, 4.725), stdev = 0.021
  CI (99.9%): [4.625, 4.788] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_39_MemoryAccess.sumArrayList

# Run progress: 33.33% complete, ETA 00:00:52
# Fork: 1 of 5
# Warmup Iteration   1: 25.713 ms/op
Iteration   1: 24.861 ms/op

# Run progress: 40.00% complete, ETA 00:00:46
# Fork: 2 of 5
# Warmup Iteration   1: 24.457 ms/op
Iteration   1: 24.958 ms/op

# Run progress: 46.67% complete, ETA 00:00:41
# Fork: 3 of 5
# Warmup Iteration   1: 24.648 ms/op
Iteration   1: 24.057 ms/op

# Run progress: 53.33% complete, ETA 00:00:36
# Fork: 4 of 5
# Warmup Iteration   1: 26.171 ms/op
Iteration   1: 25.954 ms/op

# Run progress: 60.00% complete, ETA 00:00:31
# Fork: 5 of 5
# Warmup Iteration   1: 23.883 ms/op
Iteration   1: 24.881 ms/op


Result "org.sample.JMHSample_39_MemoryAccess.sumArrayList":
  24.942 ��(99.9%) 2.596 ms/op [Average]
  (min, avg, max) = (24.057, 24.942, 25.954), stdev = 0.674
  CI (99.9%): [22.346, 27.538] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1+8-16
# VM invoker: C:\Users\kisia\Desktop\record\openjdk-22.0.1_windows-x64_bin\jdk-22.0.1\bin\java.exe
# VM options: <none>
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.JMHSample_39_MemoryAccess.sumArrayListShuffled

# Run progress: 66.67% complete, ETA 00:00:26
# Fork: 1 of 5
# Warmup Iteration   1: 197.170 ms/op
Iteration   1: 185.425 ms/op

# Run progress: 73.33% complete, ETA 00:00:21
# Fork: 2 of 5
# Warmup Iteration   1: 188.739 ms/op
Iteration   1: 182.927 ms/op

# Run progress: 80.00% complete, ETA 00:00:15
# Fork: 3 of 5
# Warmup Iteration   1: 192.764 ms/op
Iteration   1: 185.970 ms/op

# Run progress: 86.67% complete, ETA 00:00:10
# Fork: 4 of 5
# Warmup Iteration   1: 197.015 ms/op
Iteration   1: 190.112 ms/op

# Run progress: 93.33% complete, ETA 00:00:05
# Fork: 5 of 5
# Warmup Iteration   1: 192.415 ms/op
Iteration   1: 182.033 ms/op


Result "org.sample.JMHSample_39_MemoryAccess.sumArrayListShuffled":
  185.294 ��(99.9%) 12.165 ms/op [Average]
  (min, avg, max) = (182.033, 185.294, 190.112), stdev = 3.159
  CI (99.9%): [173.128, 197.459] (assumes normal distribution)


# Run complete. Total time: 00:01:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                       Mode  Cnt    Score    Error  Units
JMHSample_39_MemoryAccess.sumArray              avgt    5    4.707 ��  0.082  ms/op
JMHSample_39_MemoryAccess.sumArrayList          avgt    5   24.942 ��  2.596  ms/op
JMHSample_39_MemoryAccess.sumArrayListShuffled  avgt    5  185.294 �� 12.165  ms/op

Benchmark result is saved to results\JMHSample_39_MemoryAccess_original.csv


STDERR:
